#!/bin/sh
# Problem: pkcon sometimes ask to choose between alternatives i686 and x86_64

self="$(basename "$0")"

has(){
  which "$@" >/dev/null 2>/dev/null
}

warn(){
  echo "$@" >&2
}


apt_file_updated=false
do_fail_if_not_found=true
pkg_list=
has_at_least_one=false

while [ -n "$1" ]; do
  case $1 in
    --any)
      has_at_least_one=true
      shift
      ;;
    -o|--or|--either)
      do_fail_if_not_found=false
      shift
      ;;
    -a|--and|--all)
      do_fail_if_not_found=true
      shift
      ;;
    -p|--package)
      shift
      pkg_list="$pkg_list $1"
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      break
      ;;
  esac
done

if has dpkg; then
  if !has aptitude; then
    apt-get -y install aptitude </dev/null
  fi
  if has aptitude && ! has apt-file; then
    aptitude --no-gui -y install apt-file
  fi
fi

pkgs=
for p in $pkg_list; do
  if has dpkg; then
    if dpkg -s "$p" </dev/null >/dev/null 2>&1; then
      has_at_least_one=true
      continue
    fi
  fi
  if has aptitude; then
    if aptitude --no-gui -y show $p >/dev/null 2>&1 </dev/null; then
      pkgs="$pkgs $p"
    elif $do_fail_if_not_found; then
      warn "$p: package not found"
      exit 1
    fi
  elif has pkcon; then
    if pkcon -y get-details $p >/dev/null 2>&1 </dev/null; then
      pkgs="$pkgs $p"
    elif $do_fail_if_not_found; then
      warn "$p: package not found"
      exit 1
    fi
  else
    warn "$self: Platform not supported, please install PackageKit (pkcon)"
    exit 1
  fi
done

for f in "$@"; do
  if [ -e "$f" ]; then
    has_at_least_one=true
  else
    if has apt-file; then
      if ! $apt_file_updated; then
        apt-file update
        apt_file_updated=true
      fi
      pkgs="$pkgs $(apt-file --package-only search "$f" | sort | uniq)"
    elif has pkcon; then
      pkg="$(pkcon -y what-provides -p -y "$f" </dev/null | grep '^Available' | awk '{ print $2 }' | cut -d- -f1 | sort | uniq)"
      if [ -n "$pkg" ]; then
        pkgs="$pkgs $pkg"
      elif $do_fail_if_not_found; then
        warn "$f: package not found"
        exit 1
      fi
    else
      warn "$self: Platform not supported, please install PackageKit (pkcon)"
      exit 1
    fi
  fi
done

if [ -n "$(echo $pkgs)" ]; then
  echo "Installing: $pkgs"
  if has aptitude; then
    aptitude update
    aptitude --no-gui -y install $pkgs </dev/null
  elif has pkcon; then
    # Go to empty directory so package name cannot be confused with files
    mkdir /tmp/pkcon-empty
    (
      cd /tmp/pkcon-empty
      pkcon -y install $pkgs </dev/null
    )
    rmdir /tmp/pkcon-empty
  fi
elif ! $has_at_least_one; then
  warn "No package found"
  exit 1
fi

