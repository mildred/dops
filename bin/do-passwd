#!/bin/bash

: ${DOPS_BIN_DIR:="$(dirname "$(readlink -f "$0")")"}
: ${DOPS_DIR:="$(cd "$DOPS_BIN_DIR/.."; pwd)"}

. "$DOPS_DIR/dopsh_functions.sh"

dopsh-init "$0" "$@"
dopsh-parseopt "H:help command" "$@" || exit 1

has_user(){
  cut -d: -f1 /etc/passwd | fgrep -x "$1" >/dev/null
}

has_group(){
  cut -d: -f1 /etc/group | fgrep -x "$1" >/dev/null
}

declare_group(){
  local op_group op_gid op
  dopsh-parseopt "H:help -gid= group" "$@" || return 1

  if ! has_group "$op_group"; then
    if has groupadd; then
      op=()
      [[ -n "$op_gid" ]] && op+=(--gid "$op_gid")
      ( set -x; groupadd ${op[@]} "$op_group" )
      return $?
    else
      fail "Cannot create group $op_group: Unknown platform"
    fi
  fi
}

declare_user(){
  local op_uid op_name op_groups op_login_group op_shell op_home op_user
  dopsh-parseopt "H:help -uid= -name= -groups= -login-group= -shell= -home= user" "${opts[@]}" || exit 1

  : ${op_login_group:="$op_user"}

  if has useradd && has usermod; then
    local op
    if ! has_user "$op_user"; then
      op=(useradd --create-home -g "$op_login_group")
    else
      op=(usermod --move-home -g "$op_login_group")
    fi
    [ -n "$op_home"  ]  && op+=(--home    "$op_home")
    [ -n "$op_shell" ]  && op+=(--shell   "$op_shell")
    [ -n "$op_uid" ]    && op+=(--uid     "$op_uid")
    [ -n "$op_name" ]   && op+=(--comment "$op_name")
    [ -n "$op_name" ]   && op+=(--comment "$op_name")
    [ -n "$op_groups" ] && op+=(--groups  "$op_groups")
    set -e
    declare_group "$op_login_group"
    ( set -x; "${op[@]}" "$op_user" )
  else
    fail "Cannot create user $op_user: Unknown platform"
  fi

  if [ -n "$op_home" ] && ! [ -e "$op_home" ]; then
    ( set -x; install -o "$op_user" -g "$op_login_group" -m 0711 -d "$op_home" )
  fi
}

case $op_command in
  declare-user)
    declare_user "${opts[@]}"
    exit $?
    ;;
  declare-group)
    declare_group "${opts[@]}"
    exit $?
    ;;
  *)
    fail "Invalid command $op_command (must be one of: declare-user declare-group)"
    ;;
esac

